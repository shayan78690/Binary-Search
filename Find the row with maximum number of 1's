class Solution {
    public int rowWithMax1s(int arr[][]) {
        int max_count = 0;
        int idx = -1;
        for(int i = 0; i < arr.length; i++) {
            int count_ones = arr[0].length - lowerBound(arr[i], arr[0].length, 1);
            if(count_ones > max_count) {
                max_count = count_ones;
                idx = i;
            }
        }
        return idx;
    }
    
    public int lowerBound(int arr[], int n, int k) {
        int low = 0;
        int high = n-1;
        int ans = n;
        while(low <= high) {
            int mid = (low + high) / 2;
            if(arr[mid] >= k) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
}
